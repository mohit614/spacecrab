{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "FunctionCodeBucket": {
      "Type": "String",
      "Description": "The name of the s3 bucket to where code was uploaded"
    },
    "FunctionDatabaseUser": {
      "Type": "String",
      "Description": "The username lambda functions will use to talk to the token database",
      "NoEcho": "true"
    },
    "EncryptedFunctionDatabasePassword": {
      "Type": "String",
      "Description": "The encrypted password lambda functions will use to talk to the token database"
    },
    "IamTokenUserPath": {
      "Type": "String",
      "Description": "The path to use for token IAM users",
      "NoEcho": "true"
    },
    "IamPath": {
      "Type": "String",
      "Description": "The path to use for all non-user IAM resources",
      "NoEcho": "true"
    },
    "TokenDatabaseAddress": {
      "Type": "String",
      "Description": "The address of the database where token metadata is stored"
    },
    "TokenDatabasePort": {
      "Type": "Number",
      "Description": "The port of the database where token metadata is stored"
    },
    "SpaceCrabLambdaExecutionRole": {
      "Type": "String",
      "Description": "An execution role we'll pass around to everyone"
    },
    "SpaceCrabLambdaExecutionRoleArn": {
      "Type": "String",
      "Description": "An execution role arn we'll pass around to everyone"
    },
    "SpaceCrabFunctionSecurityGroup": {
      "Type": "String",
      "Description": "The security group that allows lambda functions to connect to the token database and internet"
    },
    "SpaceCrabFunctionSubnet1": {
      "Type": "String",
      "Description": "The 1st subnet where lambda functions are located"
    },
    "SpaceCrabFunctionSubnet2": {
      "Type": "String",
      "Description": "The 2nd subnet where lambda functions are located"
    },
    "AlertingSnsTopic": {
      "Type": "String",
      "Description": "Alerting SNS topic"
    }
  },
  "Resources": {
    "AlertingSnsTopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "AlertingSnsTopicPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSProcessCloudTrailSnsCheck",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Ref": "SpaceCrabLambdaExecutionRoleArn"
                }
              },
              "Action": "sns:Publish",
              "Resource": {
                "Ref": "AlertingSnsTopic"
              }
            }
          ]
        },
        "Topics": [
          {
            "Ref": "AlertingSnsTopic"
          }
        ]
      }
    },
    "ProcessCloudTrailExecutionPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": "Policy for lambda function that processes cloudtrails",
        "Path": {
          "Ref": "IamPath"
        },
        "Roles": [
          {
            "Ref": "SpaceCrabLambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sns:Publish"
              ],
              "Resource": [
                {
                  "Ref": "AlertingSnsTopic"
                }
              ]
            }
          ]
        }
      }
    },
    "LambdaProcessCloudTrailFunction": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "ProcessCloudTrailExecutionPolicy"
      ],
      "Properties": {
        "FunctionName": "ProcessCloudTrailFunction",
        "Description": "Processes cloudtrail files looking for honey token usage",
        "Code": {
          "S3Bucket": {
            "Ref": "FunctionCodeBucket"
          },
          "S3Key": "ProcessCloudTrailFunction.zip"
        },
        "Role": {
          "Ref": "SpaceCrabLambdaExecutionRoleArn"
        },
        "Environment": {
          "Variables": {
            "HONEY_TOKEN_USER_PATH": {
              "Ref": "IamTokenUserPath"
            },
            "HONEY_PATH": {
              "Ref": "IamPath"
            },
            "FUNCTION_DATABASE_USER": {
              "Ref": "FunctionDatabaseUser"
            },
            "TOKEN_DATABASE_ADDRESS": {
              "Ref": "TokenDatabaseAddress"
            },
            "TOKEN_DATABASE_PORT": {
              "Ref": "TokenDatabasePort"
            },
            "ALERTING_SNS_TOPIC": {
              "Ref": "AlertingSnsTopic"
            },
            "ENCRYPTED_DATABASE_PASSWORD": {
              "Ref": "EncryptedFunctionDatabasePassword"
            }
          }
        },
        "Timeout": 150,
        "Handler": "index.lambda_handler",
        "Runtime": "python2.7",
        "MemorySize": 128,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SpaceCrabFunctionSecurityGroup"
            }
          ],
          "SubnetIds": [
            {
              "Ref": "SpaceCrabFunctionSubnet1"
            },
            {
              "Ref": "SpaceCrabFunctionSubnet2"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "LambdaProcessCloudTrailFunctionArn": {
      "Description": "The ARN of the lambda function that processes cloudtrails",
      "Value": {
        "Fn::GetAtt": [
          "LambdaProcessCloudTrailFunction",
          "Arn"
        ]
      }
    }
  }
}